apiVersion: v1
kind: ServiceAccount
metadata:
  name: redis-sa
  namespace: {{ k8s_namespace }}
  labels: 
    app: redis-cluster
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: redis-cr
  namespace: {{ k8s_namespace }}
  labels: 
    app: redis-cluster
rules:
- apiGroups:
  - '*'
  resources: 
  - '*'
  verbs: 
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata: 
  name: read-crbind
  namespace: {{ k8s_namespace }}
  labels: 
    app: redis-cluster
subjects:
- kind: ServiceAccount
  name: redis-sa
  namespace: {{ k8s_namespace }}
roleRef:
  kind: ClusterRole
  name:  redis-cr
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: redis-ctrl-center
  namespace: {{ k8s_namespace }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: redis-ctrl-center
        app: redis-cluster
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: redis-sa
      containers:
      - name: redis-ctrl-center
        image: {{ redis_docker_image }}
        imagePullPolicy: Always
        env:
        - name: MODE
          value: "cluster_ctrl"
        - name: REDIS_CLUSTER_REPLICAS
          value: "{{ redis_cluster_replicas }}"
        - name: LOG_LEVEL
          value: "{{ log_level }}"
        - name: API_SERVER_ADDR
          value: "{{ api_server_addr }}"
        - name: REDIS_PORT
          value: "{{ redis_server_port }}"
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: {{ redis_server_port }}
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: redis-cluster-node
  namespace: {{ k8s_namespace }}
spec:
  serviceName: "redis-cluster-svc"
  replicas: {{ redis_statefulset_replicas }}
  template:
    metadata:
      labels:
        name: redis-cluster-node
        app: redis-cluster
    spec:
      hostNetwork: {{ hostnetwork }}
      dnsPolicy: ClusterFirstWithHostNet
      terminationGracePeriodSeconds: 10
      serviceAccountName: redis-sa
      containers:
      - name: redis-cluster-node
        image: {{ redis_docker_image }}
        imagePullPolicy: Always
        env:
        - name: MODE
          value: "cluster"
        - name: REDIS_CLUSTER_REPLICAS
          value: "{{ redis_cluster_replicas }}"
        - name: LOG_LEVEL
          value: "{{ log_level }}"
        - name: API_SERVER_ADDR
          value: "{{ api_server_addr }}"
        - name: REDIS_PORT
          value: "{{ redis_server_port }}"
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: {{ redis_server_port }}
        volumeMounts:
  {% if persistent_flag %}
        - name: redisdata
          mountPath: /home/redis
  {% endif %}
        securityContext:
          capabilities: {}
          privileged: true
  {% if persistent_flag %}
  volumeClaimTemplates:
  - metadata:
      name: redisdata
      annotations:
        volume.beta.kubernetes.io/storage-class: "fast"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ redis_data_size }}Gi
  {% endif %}
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster-svc
  namespace: {{ k8s_namespace }}
  labels:
    name: redis-cluster-svc
    app: redis-cluster
spec:
  ports:
  - port: 6379
    targetPort: {{ redis_server_port }}
  clusterIP: None
  selector:
    name: redis-cluster-node
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster-svc-np
  namespace: {{ k8s_namespace }}
  labels:
    name: redis-cluster-svc-np
    app: redis-cluster
spec:
  ports:
  - port: 6379
    targetPort: {{ redis_server_port }}
    nodePort: {{ redis_server_nodeport }}
  type: NodePort
  selector:
    name: redis-cluster-node 